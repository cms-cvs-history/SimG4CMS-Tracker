process  ValidationProduction = {

include "FWCore/MessageLogger/data/MessageLogger.cfi"
	
	   service = RandomNumberGeneratorService
	   {
	      untracked uint32 sourceSeed = 135799753
	      PSet moduleSeeds =
	      {
	         untracked uint32 VtxSmeared = 123456789
	      }
	   }
	
	    source = FlatRandomPtGunSource
	    {
	      untracked int32 maxEvents = 10
	      untracked PSet PGunParameters =
	      {
	         untracked vint32 PartID = {13}
	         untracked double MinEta = -2.5
	         untracked double MaxEta =  2.5
	         untracked double MinPhi = -3.14159265358979323846 # in radians
	         untracked double MaxPhi =  3.14159265358979323846
	         untracked double MinPt   = 9.99
	         untracked double MaxPt   = 10.01
	      }
	      untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
	    }
	
	    module VtxSmeared = VertexGenerator 
	    {
	         string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
	         double MeanX = 0.
	         double MeanY = 0.
	         double MeanZ = 0.
	         double SigmaX = 0.015
	         double SigmaY = 0.015
	         double SigmaZ = 53.0  // in mm (as in COBRA/OSCAR)
	    }	


	   #Geometry
	   #
	   include "Geometry/TrackerSimData/data/trackerSimGeometryXML.cfi"
	   es_module = TrackerGeometricDetESModule {}

	   #Magnetic Field
	   #
	   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

 	   module SimG4Object = OscarProducer 
		{ 
			bool NonBeamEvent = false
			untracked int32 RunNumber = 1001
			untracked int32 G4EventManagerVerbosity = 0
			untracked int32 G4StackManagerVerbosity = 0
			untracked int32 G4TrackingManagerVerbosity = 0
			bool UseMagneticField = true
			#bool UseMagneticField = false
			bool OverrideUserStackingAction = true
			bool StoreRndmSeeds = false
			bool RestoreRndmSeeds = false
			string PhysicsTablesDirectory = "PhysicsTables"
			bool StorePhysicsTables = false
			bool RestorePhysicsTables = false
	 	        PSet MagneticField =
                	{
                        	double delta = 1.
                 	}	
                	PSet Physics =
			{
				string type = "SimG4Core/Physics/QGSP"
				bool DummyEMPhysics = false
	                        bool CutsPerRegion = true
				double DefaultCutValue = 1000. # in cm, i.e. 10m
				untracked int32 Verbosity = 0  # 1 will print cuts as they get set from DD
				                               # 2 will do as 1 + will dump Geant4 table of cuts
			}
			PSet Generator = 
			{
				bool ApplyPtCuts = true
				bool ApplyEtaCuts = true
				bool ApplyPhiCuts = false
				double MinPhiCut = 0.    # in degrees; 
				double MaxPhiCut = 360.  # internally converted to radians, (-pi,pi) range accounted for
				double MinEtaCut = -5.5
				double MaxEtaCut = 5.5
				double MinPtCut = 40.
				double MaxPtCut = 999999.
				untracked int32 Verbosity = 0
		 }

			PSet RunAction = { string StopFile = "StopRun" }
			PSet EventAction =
			{
				bool CollapsePrimaryVertices = false
				string StopFile = "StopRun"
				untracked bool debug = false
			}
			PSet TrackingAction = 
			{ 
			   untracked bool DetailedTiming = false 
			}
		        PSet UtilityActions =
		        {
		               string type = "SimG4Core/UtilityAction/TrackingVerboseAction"
		               untracked bool  DEBUG = false
		               untracked bool  CheckForHighEtPhotons = false
		               untracked int32 EventMin = 0
		               untracked int32 EventMax = 0
		               untracked int32 EventStep = 1
		               untracked int32 TrackMin = 0
		               untracked int32 TrackMax = 0
		               untracked int32 TrackStep = 1
		               untracked int32 VerboseLevel = 0 
      			}
			PSet SteppingAction =
			{
				bool   KillBeamPipe = true
				double CriticalEnergyForVacuum = 2.0
				double CriticalDensity = 1.e-25
				untracked int32  Verbosity = 0
			}
			PSet TrackerSD =
			{
				bool    ZeroEnergyLoss = false
				bool	NeverAccumulate = false
				bool	PrintHits = false
				double  ElectronicSigmaInNanoSeconds = 12.06         
				double  EnergyThresholdForPersistencyInGeV = 0.5
				double  EnergyThresholdForHistoryInGeV = 0.05
		        }

		}

		es_module = TrackerDigiGeometryESModule {}

        	module prod =  SimHitTrackerAnalyzer {
		    untracked string moduleLabelMC = 'FlatRandomPtGunSource' 
		    untracked string moduleLabelTk = 'SimG4Object' 
		    untracked string moduleLabelVtx = 'SimG4Object' 
		}

	        module OutPut = PoolOutputModule { untracked string fileName = "simevent_onlyTracker.root" }

		#provide a scheduler path
        	path p1 = {VtxSmeared, SimG4Object, prod}      
		endpath outpath = {OutPut}
}